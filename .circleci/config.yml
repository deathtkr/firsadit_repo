version: 2.1

executors:
  dotnet-executor:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
  docker-executor:
    docker:
      - image: cimg/base:stable
  sonar-executor:
    docker:
      - image: cimg/openjdk:17.0.11-browsers  

jobs:
  build:
    executor: dotnet-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dotnet-{{ .Branch }}-{{ checksum "appsettings.Development.json" }}
            - v1-dotnet-{{ .Branch }}-
          paths:
            - /root/.nuget/packages  # Adjust if necessary based on where .NET SDK caches packages
            - /root/project           # Adjust if necessary based on where your project resides
      - run:
          name: Clear nuget
          command: dotnet nuget locals all --clear
      - run:
          name: Restore dependencies
          command: dotnet restore
      - run:
          name: Build the application
          command: dotnet build --configuration Release --no-restore
      - run:
          name: Publish the application
          command: dotnet publish --configuration Release --output ./publish --no-build 
      # Store artifacts
      - run:
          name: Store artifacts
          command: |
            mkdir -p /tmp/artifacts
            cp -r ./publish /tmp/artifacts  # Copy published artifacts to a temporary directory
      - store_artifacts:
          path: /tmp/artifacts

      - save_cache:
          paths:
            - /root/.nuget/packages
            - /root/project
          key: v1-dotnet-{{ .Branch }}-{{ checksum "appsettings.Development.json" }}

  docker_build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -f hello-world-api/Dockerfile -t $DOCKERHUB_USERNAME/helloworldapp:adi3 hello-world-api
      - run:
          name: Push Docker image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/helloworldapp:adi3

      - save_cache:
          key: v1-docker-{{ .Branch }}
          paths:
            - /var/lib/docker

  sonarcloud_scan:
    executor: sonar-executor
    steps:
      - checkout 
      - run:
          name: Download SonarScanner
          command: |
            curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip
            unzip sonar-scanner-cli.zip
            mv sonar-scanner-5.0.0.2966-linux sonar-scanner
      - run:
          name: Run SonarCloud Scan
          command: |
            ./sonar-scanner/bin/sonar-scanner \
              -Dsonar.projectKey=$projectKey \
              -Dsonar.organization=$organization \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$Sonar_Token

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - docker_build
      - sonarcloud_scan:
          requires:
            - build
