version: 2.1

orbs:
  kubernetes: circleci/kubernetes@1.3.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
  terraform-executor:
    docker:
      - image: hashicorp/terraform:1.5.0
  kubectl-executor:
    docker:
      - image: cimg/aws:2024.03
  sonar-executor:
    docker:
      - image: cimg/openjdk:17.0.11-browsers  

jobs:
  terraform_apply:
    executor: terraform-executor
    steps:
      - checkout
      - run:
          name: Setup Terraform
          command: |
            cd terraform
            terraform init 
            terraform plan 

      - run:
          name: Apply Terraform Configuration
          command: |
           cd terraform
           terraform apply -auto-approve
           terraform output cluster_name
           terraform output cluster_endpoint
           echo "export EKS_CLUSTER_NAME=$(terraform output -raw cluster_name)" >> $BASH_ENV
           echo "export AWS_REGION=$(terraform output -raw aws_region)" >> $BASH_ENV
           echo "export CLUSTER_ENDPOINT=$(terraform output -raw cluster_endpoint)" >> $BASH_ENV

#      - run:
 #         name: terraform detsory
  #        command: |
   #         cd terraform
    #        terraform destroy -auto-approve

  
  kubectl_deploy:
    executor: kubectl-executor
    steps:
      - checkout
      - run:
          name: Setup kubectl
          command: |
            aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME 
      - run:
          name: Apply Kubernetes Deployment
          command: |
            cd kubernetes
            kubectl apply -f deployment.yml

  docker_build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -f simple-python-website-main/Dockerfile -t $DOCKERHUB_USERNAME/pythonweb:adi3 simple-python-website-main
      - run:
          name: Push Docker image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/pythonweb:adi3

      - save_cache:
          key: v1-docker-{{ .Branch }}
          paths:
            - /var/lib/docker

  sonarcloud_scan:
    executor: sonar-executor
    steps:
      - checkout 
      - run:
          name: Download SonarScanner
          command: |
            curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip
            unzip sonar-scanner-cli.zip
            mv sonar-scanner-5.0.0.2966-linux sonar-scanner
      - run:
          name: Run SonarCloud Scan
          command: |
            ./sonar-scanner/bin/sonar-scanner \
              -Dsonar.projectKey=$projectKey \
              -Dsonar.organization=$organization \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$Sonar_Token

workflows:
  version: 2
  build_and_push:
    jobs:
      - docker_build
      - sonarcloud_scan:
          requires:
            - docker_build

  deploy:
    jobs:
      - terraform_apply
      - kubectl_deploy:
          requires:
            - terraform_apply
